# mqtt/app/mqtt_client.py

import paho.mqtt.client as mqtt
from embedded_system.mqtt.config import *
from embedded_system.util.log_config import custom_log_info
from embedded_system.util.config import switch_status
# from embedded_system.mqtt import MQTT_Topics

def on_connect(client, userdata, flags, rc):
    custom_log_info("Connected with result code "+str(rc))

def on_publish(client, userdata, mid):
    custom_log_info("Message Published.")

def on_message(client, userdata, message):
    payload = message.payload.decode()
    config.switch_status = True if payload == "true" else False
    custom_log_info(f"Received message: {payload} from topic: {message.topic} / Switch Status : {config.switch_status}")

def setup_mqtt_client():
    # v2.1.0 - Callback
    # client = mqtt.Client(mqtt.CallbackAPIVersion.VERSION1)

    # v1.6.1 None
    client = mqtt.Client()
    client.on_connect = on_connect
    client.on_publish = on_publish
    client.on_message = on_message
    
    client.subscribe(MQTT_Topics.SWITCH)
    client.connect(MQTT_BROKER_URL, MQTT_PORT, 60)

    client.loop_start()  # 네트워크 루프를 시작합니다.


    return client

def publish_message(client, topic, message):
    client.publish(topic, message, qos=2)
